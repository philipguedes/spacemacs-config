;; Object boto3/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "boto3/"
  :tables
  (list
    (semanticdb-table "__init__.py"
      :major-mode 'python-mode
      :tags 
        '( ("logging" include nil nil [563 577])
            ("boto3.session" include nil nil [579 612])
            ("__author__" variable nil nil [615 649])
            ("__version__" variable nil nil [650 671])
            ("DEFAULT_SESSION" variable nil nil [727 749])
            ("setup_default_session" function
               (:documentation "
    Set up a default session, passing through any parameters to the session
    constructor. There is no need to call this unless you wish to pass custom
    parameters, because a default session will be created for you.
    "
                :arguments 
                  ( ("kwargs" variable nil (reparse-symbol function_parameters) [778 786]))                  )
                nil [752 1093])
            ("set_stream_logger" function
               (:documentation "
    Add a stream handler for the given name and level to the logging module.
    By default, this logs all boto3 messages to ``stdout``.

        >>> import boto3
        >>> boto3.set_stream_logger('boto3.resources', logging.INFO)

    :type name: string
    :param name: Log name
    :type level: int
    :param level: Logging level, e.g. ``logging.INFO``
    :type format_string: str
    :param format_string: Log message format
    "
                :arguments 
                  ( ("name" variable nil (reparse-symbol function_parameters) [1117 1121])
                    ("level" variable nil (reparse-symbol function_parameters) [1131 1136])
                    ("format_string" variable nil (reparse-symbol function_parameters) [1152 1165]))                  )
                nil [1095 1973])
            ("_get_default_session" function (:documentation "
    Get the default session, creating one if needed.

    :rtype: :py:class:`~boto3.session.Sesssion`
    :return: The default session
    ") nil [1975 2246])
            ("client" function
               (:documentation "
    Create a low-level service client by name using the default session.

    See :py:meth:`boto3.session.Session.client`.
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [2259 2264])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [2266 2274]))                  )
                nil [2248 2474])
            ("resource" function
               (:documentation "
    Create a resource service client by name using the default session.

    See :py:meth:`boto3.session.Session.resource`.
    "
                :arguments 
                  ( ("args" variable nil (reparse-symbol function_parameters) [2489 2494])
                    ("kwargs" variable nil (reparse-symbol function_parameters) [2496 2504]))                  )
                nil [2476 2707])
            ("NullHandler" type
               (:superclasses ("logging.Handler")
                :members 
                  ( ("emit" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [2905 2909])
                            ("record" variable nil (reparse-symbol function_parameters) [2911 2917]))                          )
                        (reparse-symbol indented_block_body) [2896 2933]))                  
                :type "class")
                nil [2856 2933])
            ("logging" code nil nil [2935 2987]))          
      :file "__init__.py"
      :pointmax 2988
      :fsize 2987
      :lastmodtime '(22858 51695 266210 317000)
      :unmatched-syntax nil)
    (semanticdb-table "session.py"
      :major-mode 'python-mode
      :tags 
        '( ("copy" include nil nil [563 574])
            ("os" include nil nil [575 584])
            ("botocore.session" include nil nil [586 609])
            ("botocore.client" include nil nil [610 644])
            ("botocore.exceptions" include nil nil [645 715])
            ("boto3" include nil nil [717 729])
            ("boto3.utils" include nil nil [730 748])
            ("boto3.exceptions" include nil nil [749 824])
            ("ResourceFactory" include nil nil [850 872])
            ("Session" type
               (:documentation "
    A session stores configuration state and allows you to create service
    clients and resources.

    :type aws_access_key_id: string
    :param aws_access_key_id: AWS access key ID
    :type aws_secret_access_key: string
    :param aws_secret_access_key: AWS secret access key
    :type aws_session_token: string
    :param aws_session_token: AWS temporary session token
    :type region_name: string
    :param region_name: Default region when creating new connections
    :type botocore_session: botocore.session.Session
    :param botocore_session: Use this Botocore session instead of creating
                             a new default one.
    :type profile_name: string
    :param profile_name: The name of a profile to use. If not given, then
                         the default profile is used.
    "
                :superclasses ("object")
                :members 
                  ( ("__init__" function
                       (:suite 
                          ( ("if" code nil (reparse-symbol indented_block_body) [1926 2120])
                            ("if" code nil (reparse-symbol indented_block_body) [2201 2665])
                            ("if" code nil (reparse-symbol indented_block_body) [2674 2774])
                            ("if" code nil (reparse-symbol indented_block_body) [2783 2971])
                            ("if" code nil (reparse-symbol indented_block_body) [2980 3077])
                            ("self" variable nil (reparse-symbol indented_block_body) [3086 3184])
                            ("self" code nil (reparse-symbol indented_block_body) [3193 3213])
                            ("self" code nil (reparse-symbol indented_block_body) [3222 3255]))                          
                        :parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [1741 1745])
                            ("aws_access_key_id" variable nil (reparse-symbol function_parameters) [1747 1764])
                            ("aws_secret_access_key" variable nil (reparse-symbol function_parameters) [1771 1792])
                            ("aws_session_token" variable nil (reparse-symbol function_parameters) [1816 1833])
                            ("region_name" variable nil (reparse-symbol function_parameters) [1840 1851])
                            ("botocore_session" variable nil (reparse-symbol function_parameters) [1875 1891])
                            ("profile_name" variable nil (reparse-symbol function_parameters) [1898 1910]))                          
                        :constructor-flag t)
                        (reparse-symbol indented_block_body) [1728 3256])
                    ("__repr__" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3274 3278]))                          )
                        (reparse-symbol indented_block_body) [3261 3427])
                    ("profile_name" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3463 3467]))                          
                        :documentation "
        The **read-only** profile name.
        ")
                        (reparse-symbol indented_block_body) [3432 3584])
                    ("region_name" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3619 3623]))                          
                        :documentation "
        The **read-only** region name.
        ")
                        (reparse-symbol indented_block_body) [3589 3748])
                    ("events" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3778 3782]))                          
                        :documentation "
        The event emitter for a session
        ")
                        (reparse-symbol indented_block_body) [3753 3909])
                    ("available_profiles" function
                       (:parent "dummy"
                        :decorators 
                          ( ("property" function (:type "decorator") nil nil))                          
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [3951 3955]))                          
                        :documentation "
        The profiles available to the session credentials
        ")
                        (reparse-symbol indented_block_body) [3914 4088])
                    ("_setup_loader" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4111 4115]))                          
                        :documentation "
        Setup loader paths so that we can load resources.
        ")
                        (reparse-symbol indented_block_body) [4093 4369])
                    ("get_available_services" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4401 4405]))                          
                        :documentation "
        Get a list of available services that can be loaded as low-level
        clients via :py:meth:`Session.client`.

        :rtype: list
        :return: List of service names
        ")
                        (reparse-symbol indented_block_body) [4374 4667])
                    ("get_available_resources" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [4700 4704]))                          
                        :documentation "
        Get a list of available services that can be loaded as resource
        clients via :py:meth:`Session.resource`.

        :rtype: list
        :return: List of service names
        ")
                        (reparse-symbol indented_block_body) [4672 4990])
                    ("get_available_partitions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5024 5028]))                          
                        :documentation "Lists the available partitions

        :rtype: list
        :return: Returns a list of partition names (e.g., [\"aws\", \"aws-cn\"])
        ")
                        (reparse-symbol indented_block_body) [4995 5240])
                    ("get_available_regions" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [5271 5275])
                            ("service_name" variable nil (reparse-symbol function_parameters) [5277 5289])
                            ("partition_name" variable nil (reparse-symbol function_parameters) [5291 5305])
                            ("allow_non_regional" variable nil (reparse-symbol function_parameters) [5343 5361]))                          
                        :documentation "Lists the region and endpoint names of a particular partition.

        :type service_name: string
        :param service_name: Name of a service to list endpoint for (e.g., s3).

        :type partition_name: string
        :param partition_name: Name of the partition to limit endpoints to.
            (e.g., aws for the public AWS endpoints, aws-cn for AWS China
            endpoints, aws-us-gov for AWS GovCloud (US) Endpoints, etc.)

        :type allow_non_regional: bool
        :param allow_non_regional: Set to True to include endpoints that are
             not regional endpoints (e.g., s3-external-1,
             fips-us-gov-west-1, etc).

        :return: Returns a list of endpoint names (e.g., [\"us-east-1\"]).
        ")
                        (reparse-symbol indented_block_body) [5245 6294])
                    ("get_credentials" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6319 6323]))                          
                        :documentation "
        Return the :class:`botocore.credential.Credential` object
        associated with this session.  If the credentials have not
        yet been loaded, this will attempt to load them.  If they
        have already been loaded, this will return the cached
        credentials.
        ")
                        (reparse-symbol indented_block_body) [6299 6679])
                    ("client" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [6695 6699])
                            ("service_name" variable nil (reparse-symbol function_parameters) [6701 6713])
                            ("region_name" variable nil (reparse-symbol function_parameters) [6715 6726])
                            ("api_version" variable nil (reparse-symbol function_parameters) [6733 6744])
                            ("use_ssl" variable nil (reparse-symbol function_parameters) [6766 6773])
                            ("verify" variable nil (reparse-symbol function_parameters) [6780 6786])
                            ("endpoint_url" variable nil (reparse-symbol function_parameters) [6793 6805])
                            ("aws_access_key_id" variable nil (reparse-symbol function_parameters) [6827 6844])
                            ("aws_secret_access_key" variable nil (reparse-symbol function_parameters) [6851 6872])
                            ("aws_session_token" variable nil (reparse-symbol function_parameters) [6894 6911])
                            ("config" variable nil (reparse-symbol function_parameters) [6918 6924]))                          
                        :documentation "
        Create a low-level service client by name.

        :type service_name: string
        :param service_name: The name of a service, e.g. 's3' or 'ec2'. You
            can get a list of available services via
            :py:meth:`get_available_services`.

        :type region_name: string
        :param region_name: The name of the region associated with the client.
            A client is associated with a single region.

        :type api_version: string
        :param api_version: The API version to use.  By default, botocore will
            use the latest API version when creating a client.  You only need
            to specify this parameter if you want to use a previous API version
            of the client.

        :type use_ssl: boolean
        :param use_ssl: Whether or not to use SSL.  By default, SSL is used.
            Note that not all services support non-ssl connections.

        :type verify: boolean/string
        :param verify: Whether or not to verify SSL certificates.  By default
            SSL certificates are verified.  You can provide the following
            values:

            * False - do not validate SSL certificates.  SSL will still be
              used (unless use_ssl is False), but SSL certificates
              will not be verified.
            * path/to/cert/bundle.pem - A filename of the CA cert bundle to
              uses.  You can specify this argument if you want to use a
              different CA cert bundle than the one used by botocore.

        :type endpoint_url: string
        :param endpoint_url: The complete URL to use for the constructed
            client. Normally, botocore will automatically construct the
            appropriate URL to use when communicating with a service.  You
            can specify a complete URL (including the \"http/https\" scheme)
            to override this behavior.  If this value is provided,
            then ``use_ssl`` is ignored.

        :type aws_access_key_id: string
        :param aws_access_key_id: The access key to use when creating
            the client.  This is entirely optional, and if not provided,
            the credentials configured for the session will automatically
            be used.  You only need to provide this argument if you want
            to override the credentials used for this specific client.

        :type aws_secret_access_key: string
        :param aws_secret_access_key: The secret key to use when creating
            the client.  Same semantics as aws_access_key_id above.

        :type aws_session_token: string
        :param aws_session_token: The session token to use when creating
            the client.  Same semantics as aws_access_key_id above.

        :type config: botocore.client.Config
        :param config: Advanced client configuration options. If region_name
            is specified in the client config, its value will take precedence
            over environment variables and configuration values, but not over
            a region_name value passed explicitly to the method. See
            `botocore config documentation
            <https://botocore.readthedocs.io/en/stable/reference/config.html>`_
            for more details.

        :return: Service client instance

        ")
                        (reparse-symbol indented_block_body) [6684 10588])
                    ("resource" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [10606 10610])
                            ("service_name" variable nil (reparse-symbol function_parameters) [10612 10624])
                            ("region_name" variable nil (reparse-symbol function_parameters) [10626 10637])
                            ("api_version" variable nil (reparse-symbol function_parameters) [10644 10655])
                            ("use_ssl" variable nil (reparse-symbol function_parameters) [10679 10686])
                            ("verify" variable nil (reparse-symbol function_parameters) [10693 10699])
                            ("endpoint_url" variable nil (reparse-symbol function_parameters) [10706 10718])
                            ("aws_access_key_id" variable nil (reparse-symbol function_parameters) [10742 10759])
                            ("aws_secret_access_key" variable nil (reparse-symbol function_parameters) [10766 10787])
                            ("aws_session_token" variable nil (reparse-symbol function_parameters) [10811 10828])
                            ("config" variable nil (reparse-symbol function_parameters) [10835 10841]))                          
                        :documentation "
        Create a resource service client by name.

        :type service_name: string
        :param service_name: The name of a service, e.g. 's3' or 'ec2'. You
            can get a list of available services via
            :py:meth:`get_available_resources`.

        :type region_name: string
        :param region_name: The name of the region associated with the client.
            A client is associated with a single region.

        :type api_version: string
        :param api_version: The API version to use.  By default, botocore will
            use the latest API version when creating a client.  You only need
            to specify this parameter if you want to use a previous API version
            of the client.

        :type use_ssl: boolean
        :param use_ssl: Whether or not to use SSL.  By default, SSL is used.
            Note that not all services support non-ssl connections.

        :type verify: boolean/string
        :param verify: Whether or not to verify SSL certificates.  By default
            SSL certificates are verified.  You can provide the following
            values:

            * False - do not validate SSL certificates.  SSL will still be
              used (unless use_ssl is False), but SSL certificates
              will not be verified.
            * path/to/cert/bundle.pem - A filename of the CA cert bundle to
              uses.  You can specify this argument if you want to use a
              different CA cert bundle than the one used by botocore.

        :type endpoint_url: string
        :param endpoint_url: The complete URL to use for the constructed
            client. Normally, botocore will automatically construct the
            appropriate URL to use when communicating with a service.  You
            can specify a complete URL (including the \"http/https\" scheme)
            to override this behavior.  If this value is provided,
            then ``use_ssl`` is ignored.

        :type aws_access_key_id: string
        :param aws_access_key_id: The access key to use when creating
            the client.  This is entirely optional, and if not provided,
            the credentials configured for the session will automatically
            be used.  You only need to provide this argument if you want
            to override the credentials used for this specific client.

        :type aws_secret_access_key: string
        :param aws_secret_access_key: The secret key to use when creating
            the client.  Same semantics as aws_access_key_id above.

        :type aws_session_token: string
        :param aws_session_token: The session token to use when creating
            the client.  Same semantics as aws_access_key_id above.

        :type config: botocore.client.Config
        :param config: Advanced client configuration options. If region_name
            is specified in the client config, its value will take precedence
            over environment variables and configuration values, but not over
            a region_name value passed explicitly to the method.  If
            user_agent_extra is specified in the client config, it overrides
            the default user_agent_extra provided by the resource API. See
            `botocore config documentation
            <https://botocore.readthedocs.io/en/stable/reference/config.html>`_
            for more details.

        :return: Subclass of :py:class:`~boto3.resources.base.ServiceResource`
        ")
                        (reparse-symbol indented_block_body) [10593 17857])
                    ("_register_default_handlers" function
                       (:parent "dummy"
                        :arguments 
                          ( ("self" variable nil (reparse-symbol function_parameters) [17893 17897]))                          )
                        (reparse-symbol indented_block_body) [17862 19581]))                  
                :type "class")
                nil [875 19581]))          
      :file "session.py"
      :pointmax 19581
      :fsize 19580
      :lastmodtime '(22858 51695 266210 317000)
      :unmatched-syntax '((FROM 826 . 830) (PERIOD 831 . 832))))
  :file "!home!philip!.virtualenvs!cidade-alerta!lib!python3.5!site-packages!boto3!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.2")
